//Base Style
$base : false;


/*
  |-----------------------------------------------------------------------------
  | Screens                      https://tailwindcss.com/docs/responsive-design
  |-----------------------------------------------------------------------------
  |
  | Screens in Tailwind are translated to CSS media queries. They define the
  | responsive breakpoints for your project. By default Tailwind takes a
  | "mobile first" approach, where each screen size represents a minimum
  | viewport width. Feel free to have as few or as many screens as you
  | want, naming them in whatever way you'd prefer for your project.
  |
  | Tailwind also allows for more complex screen definitions, which can be
  | useful in certain situations. Be sure to see the full responsive
  | documentation for a complete list of options.
  |
  | Class name: .{screen}:{utility}
  |
  */

$screens: (
    sm: '576px',
    md: '768px',
    lg: '992px',
    xl: '1200px',
);


$variant-list: ('hover','focus','active','visited','focus-within','last','first', 'odd', 'even', 'disabled', '');


/*
|-------------------------------------------------------------------------------
| Colors                                    https://tailwindcss.com/docs/colors
|-------------------------------------------------------------------------------
|
| Here you can specify the colors used in your project. To get you started,
| we've provided a generous palette of great looking colors that are perfect
| for prototyping, but don't hesitate to change them for your project. You
| own these colors, nothing will break if you change everything about them.
|
| We've used literal color names ("red", "blue", etc.) for the default
| palette, but if you'd rather use functional names like "primary" and
| "secondary", go for it.
|
*/


$colors: (
    transparent: transparent,
    current: currentColor,
    black:#000,	
    white: #fff,

    primary: #2b6cb0,
    secondary: #e10050,
    error: #d32f2f,
    warning: #ffa000,
    success: #43a047,
    info: #2979ff,

    gray-100: #fafafa,	
    gray-200: #eeeeee,	
    gray-300: #e0e0e0,	
    gray-400: #bdbdbd,	
    gray-500: #9e9e9e,	
    gray-600: #757575,	
    gray-700: #616161,	
    gray-800: #424242,	
    gray-900: #212121,

    red-100: #fff5f5,	
    red-200: #fed7d7,	
    red-300: #feb2b2,	
    red-400: #fc8181,	
    red-500: #f56565,	
    red-600: #e53e3e,	
    red-700: #c53030,	
    red-800: #9b2c2c,	
    red-900: #742a2a,

    // orange-100: #fffaf0,	
    // orange-200: #feebc8,	
    // orange-300: #fbd38d,	
    // orange-400: #f6ad55,	
    // orange-500: #ed8936,	
    // orange-600: #dd6b20,	
    // orange-700: #c05621,	
    // orange-800: #9c4221,	
    // orange-900: #7b341e,

    // yellow-100: #fffff0,	
    // yellow-200: #fefcbf,	
    // yellow-300: #faf089,	
    // yellow-400: #f6e05e,	
    // yellow-500: #ecc94b,	
    // yellow-600: #d69e2e,	
    // yellow-700: #b7791f,	
    // yellow-800: #975a16,	
    // yellow-900: #744210,

    // green-100: #f0fff4,	
    // green-200: #c6f6d5,	
    // green-300: #9ae6b4,	
    // green-400: #68d391,	
    // green-500: #48bb78,	
    // green-600: #38a169,	
    // green-700: #2f855a,	
    // green-800: #276749,	
    // green-900: #22543d,

    // teal-100: #e6fffa,	
    // teal-200: #b2f5ea,	
    // teal-300: #81e6d9,	
    // teal-400: #4fd1c5,	
    // teal-500: #38b2ac,	
    // teal-600: #319795,	
    // teal-700: #2c7a7b,	
    // teal-800: #285e61,	
    // teal-900: #234e52,

    // blue-100: #ebf8ff,	
    // blue-200: #bee3f8,	
    // blue-300: #90cdf4,	
    // blue-400: #63b3ed,	
    // blue-500: #4299e1,	
    // blue-600: #3182ce,	
    // blue-700: #2b6cb0,	
    // blue-800: #2c5282,	
    // blue-900: #2a4365,

    // indigo-100: #ebf4ff,	
    // indigo-200: #c3dafe,	
    // indigo-300: #a3bffa,	
    // indigo-400: #7f9cf5,	
    // indigo-500: #667eea,	
    // indigo-600: #5a67d8,	
    // indigo-700: #4c51bf,	
    // indigo-800: #434190,	
    // indigo-900: #3c366b,

    // purple-100: #faf5ff,	
    // purple-200: #e9d8fd,	
    // purple-300: #d6bcfa,	
    // purple-400: #b794f4,	
    // purple-500: #9f7aea,	
    // purple-600: #805ad5,	
    // purple-700: #6b46c1,	
    // purple-800: #553c9a,	
    // purple-900: #44337a,

    // pink-100: #fff5f7,	
    // pink-200: #fed7e2,	
    // pink-300: #fbb6ce,	
    // pink-400: #f687b3,	
    // pink-500: #ed64a6,	
    // pink-600: #d53f8c,	
    // pink-700: #b83280,	
    // pink-800: #97266d,	
    // pink-900: #702459,
);




//Layout 
$containers: (
    '': 100%,
    sm: map-get($screens, sm),
    md: map-get($screens, md),
    lg: map-get($screens, lg),
    xl: map-get($screens, xl),
); 

$container: (
    enable: true,
    containers: $containers,
    responsive: true,
    prefix: 'container',
);

$displays: (
    block: block,
    inline-block: inline-block,
    inline: inline,
    flex: flex,
    inline-flex: inline-flex,
    table: table,
    table-row: table-row,
    table-cell:  table-cell,
    hidden: none,
);

$display: (
    enable: true,
    displays: $displays,
    responsive: true,
    prefix: '',
    variants: ('',)
);

$floats: (
    right: right,
    left: left,
    none: none,
);

$float: (
    enable: true,
    floats: $floats,
    responsive: true,
    prefix: 'float',
    variants: ('',)
);

$clearfix: (
    enable: true,
    responsive: true,
    prefix: '',
    variants: ('',)
);

$objectFits: (
    contain: contain,
    cover: cover,
    fill: fill,
    none: none,
    scale-down: scale-down,
);

$object-fit: (
    enable: true,
    objectFits: $objectFits,
    responsive: false,
    prefix: 'object',
    variants: ('',)
);

$objectPositions: (
    bottom: bottom,
    center: center,
    left: left,
    left-bottom: left bottom,
    left-top: left top,
    right: right,
    right-bottom: right bottom,
    right-top: right top,
    top: top,
);

$object-position: (
    enable: true,
    objectPositions: $objectPositions,
    responsive: true,
    prefix: 'object',
    variants: ('',)
);

$overflows: (
    auto: auto,
    hidden: hidden,
    visible: visible,
    scroll: scroll,
);

$overflow: (
    enable: true,
    overflows: $overflows,
    responsive: true,
    prefix: 'overflow',
    variants: ('',)
);

$positions: (
    static: static,
    fixed: fixed,
    absolute: absolute,
    relative: relative,
    sticky: sticky,
);

$position: (
    enable: true,
    positions: $positions,
    responsive: true,
    prefix: '',
    variants: ('',)
);

$TopRightBottomLefts: (
    0: 0,
    auto: auto,
);

$top-right-bottom-left:(
    enable: true,
    TopRightBottomLefts: $TopRightBottomLefts,
    responsive: false,
    prefix: ('inset', 'top', 'right', 'bottom', 'left'),
    variants: ('',)
);

$visibilities: (
    visible: visible,
    invisible: hidden,
);

$visibility: (
    enable: true,
    visibilities: $visibilities,
    responsive: true,
    prefix: '',
    variants: ('',)
);

$z-indexes: (
    0: 0,
    10: 10,
    20: 20,
    30: 30,
    40: 40,
    50: 50,
    auto: auto,
);

$z-index: (
    enable: true,
    z-indexes: $z-indexes,
    responsive: true,
    prefix: 'z',
    variants: ('',)
);

//Typography
$fontFamilies: (
    sans: (-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"),
    serif: ('Georgia, Cambria, "Times New Roman", Times, serif'),
    mono: ('Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace'),
);

$font-family: (
    enable: true,
    fontFamilies: $fontFamilies,
    responsive: true,
    prefix: 'font',
    variants: ('',)
);

$fontSizes: (
    xs: .75rem,
    sm: .875rem,
    base: 1rem,
    lg: 1.125rem,
    xl: 1.25rem,
    2xl: 1.5rem,
    3xl: 1.875rem,
    4xl: 2.25rem,
    5xl: 3rem,
    6xl: 4rem,
);

$font-size: (
    enable: true,
    fontSizes: $fontSizes,
    responsive: true,
    prefix: 'text',
    variants: ('',)
);

$font-smoothing: (
    enable: true,
    responsive: true,
    prefix: '',
    variants: ('',)
);

$fontStyles:(
    italic: italic,
    not-italic: normal,
);

$font-style: (
    enable: true,
    fontStyles: $fontStyles,
    responsive: true,
    prefix: '',
    variants: ('',)
);

$fontWeights: (
    hairline: 100,
    thin: 200,
    light: 300,
    normal: 400,
    medium: 500,
    semibold: 600,
    bold: 700,
    extrabold: 800,
    black: 900,
);

$font-weight: (
    enable: true,
    fontWeights: $fontWeights,
    responsive: true,
    prefix: 'font',
    variants: ('', hover, focus)
);

$letterSpacings: (
    tighter: -0.05em,
    tight: -0.025em,
    normal: 0,
    wide: 0.025em,
    wider: 0.05em,
    widest: 0.1em,
);

$letter-spacing: (
    enable: true,
    letterSpacings: $letterSpacings,
    responsive: true,
    prefix: 'tracking',
    variants: ('',)
);

$lineHeights: (
    none: 1,
    tight: 1.25,
    snug: 1.375,
    normal: 1.5,
    relaxed: 1.625,
    loose: 2,
);

$line-height: (
    enable: true,
    lineHeights: $lineHeights,
    responsive: true,
    prefix: 'leading',
    variants: ('',)
);

$listStyleTypes: (
    none: none,
    disc: disc,
    decimal: decimal,
);

$list-style-type: (
    enable: true,
    listStyleTypes: $listStyleTypes,
    responsive: true,
    prefix: 'list',
    variants: ('',)
);

$listStylePositions: (
    inside: inside,
    outside: outside,
);

$list-style-position: (
    enable: true,
    listStylePositions: $listStylePositions,
    responsive: true,
    prefix: 'list',
    variants: ('',)
);

$textAligns: (
    left: left,
    center: center,
    right: right,
    justify: justify,
);

$text-align: (
    enable: true,
    textAligns: $textAligns,
    responsive: true,
    prefix: 'text',
    variants: ('',)
);

$text-color: (
    enable: false,
    textColors: $colors,
    responsive: true,
    prefix: 'text',
    variants: ('', hover, focus)
);

$textDecorations: (
    underline: underline,
    line-through: line-through,
    no-underline: none
);

$text-decoration: (
    enable: true,
    textDecorations: $textDecorations,
    responsive: true,
    prefix: '',
    variants: ('', hover, focus)
);

$textTransforms: (
    uppercase: uppercase,
    lowercase: lowercase,
    capitalize: capitalize,
    normal-case: none
);

$text-transform: (
    enable: true,
    textTransforms: $textTransforms,
    responsive: true,
    prefix: '',
    variants: ('',)
);

$verticalAligns: (
    baseline: baseline,
    top: top,
    middle: middle,
    bottom: bottom,
    text-top: text-top,
    text-bottom: text-bottom,
);

$vertical-align: (
    enable: true,
    verticalAligns: $verticalAligns,
    responsive: true,
    prefix: 'align',
    variants: ('',)
);

$whiteSpaces:(
    normal: normal,
    // nowrap: nowrap  default tailwind is no-wrap: nowrap
    no-wrap: nowrap,
    pre: pre,
    pre-line: pre-line,
    pre-wrap: pre-wrap,
);

$white-space: (
    enable: true,
    whiteSpaces: $whiteSpaces,
    responsive: true,
    prefix: 'whitespace',
    variants: ('',)
);

$word-break: (
    enable: true,
    responsive: true,
    prefix: '',
    variants: ('',)
);

//Backgrounds
$backgroundAttachments : (
    fixed: fixed,
    local: local,
    scroll: scroll,
);

$background-attachment: (
    enable: true,
    backgroundAttachments: $backgroundAttachments,
    responsive: true,
    prefix: 'bg',
    variants: ('',)
);

$background-color: (
    enable: true,
    backgroundColors: $colors,
    responsive: true,
    prefix: 'bg',
    variants: ('', hover, focus)
);

$backgroundPositions : (
    bottom: bottom,
    center: 50%,
    left: 0,
    left-bottom: 0 100%,
    left-top: 0 0,
    right: 100%,
    right-bottom: 100% 100%,
    right-top: 100% 0,
    top: top,
);

$background-position: (
    enable: true,
    backgroundPositions: $backgroundPositions,
    responsive: true,
    prefix: 'bg',
    variants: ('',)
);

$backgroundRepeats : (
    repeat: repeat,
    no-repeat: no-repeat,
    repeat-x: repeat-x,
    repeat-y: repeat-y,
    repeat-round: round,
    repeat-space: space,
);

$background-repeat: (
    enable: true,
    backgroundRepeats: $backgroundRepeats,
    responsive: true,
    prefix: 'bg',
    variants: ('',)
);

$backgroundSizes : (
    auto: auto,
    cover: cover,
    contain: contain,
);

$background-size: (
    enable: true,
    backgroundSizes: $backgroundSizes,
    responsive: true,
    prefix: 'bg',
    variants: ('',)
);

//Borders
$border-color: (
    enable: true,
    borderColors: $colors,
    responsive: true,
    prefix: 'border',
    variants: ('', hover, focus)
);

$borderStyles : (
    solid: solid,
    dashed: dashed,
    dotted: dotted,
    none: none,
);

$border-style: (
    enable: true,
    borderStyles: $borderStyles,
    responsive: true,
    prefix: 'border',
    variants: ('',)
);

$borderWidths : (
    '': 1px,
    '0': 0,
    '2': 2px,
    '4': 4px,
    '8': 8px,
);

$border-width: (
    enable: true,
    borderWidths: $borderWidths,
    responsive: true,
    prefix: 'border',
    variants: ('',),
    types: (
        '': border-width,
        t: border-top-width,
        b: border-bottom-width,
        l: border-right-width,
        r: border-left-width,
    )
);

$borderRadiuses : (
    -none: 0,
    -sm: .125rem,
    '': .25rem,
    -lg: .5rem,
    -full: 9999px,
);

$border-radius: (
    enable: true,
    borderRadiuses: $borderRadiuses,
    responsive: true,
    prefix: 'rounded',
    variants: ('',),
    types: (
        '': border-radius,
        -t: border-top-radius,
        -b: border-bottom-radius,
        -r: border-right-radius,
        -l: border-left-radius,
        -tl: border-top-left-radius,
        -tr: border-top-right-radius,
        -bl: border-bottom-left-radius,
        -br: border-bottom-right-radius,
    )
);

//Flexbox
$flexDirections : (
    row: row,
    row-reverse: row-reverse,
    col: column,
    col-reverse: column-reverse,
);

$flex-direction: (
    enable: true,
    flexDirections: $flexDirections,
    responsive: true,
    prefix: 'flex',
    variants: ('',),
);

$flexWraps : (
    no-wrap: nowrap,
    wrap: wrap,
    wrap-reverse: wrap-reverse,
);

$flex-wrap: (
    enable: true,
    flexWraps: $flexWraps,
    responsive: true,
    prefix: 'flex',
    variants: ('',),
);

$alignItems : (
    stretch: stretch,
    start: flex-start,
    center: center,
    end: flex-end,
    baseline: baseline,
);

$align-item: (
    enable: true,
    alignItems: $alignItems,
    responsive: true,
    prefix: 'items',
    variants: ('',),
);

$alignContents : (
    start: flex-start,
    center: center,
    end: flex-end,
    between: space-between,
    around: space-around,
);

$align-content: (
    enable: true,
    alignContents: $alignContents,
    responsive: true,
    prefix: 'content',
    variants: ('',)
);

$alignSelfs : (
    auto: auto,
    start: flex-start,
    center: center,
    end: flex-end,
    stretch: stretch,
);

$align-self: (
    enable: true,
    alignSelfs: $alignSelfs,
    responsive: true,
    prefix: 'self',
    variants: ('',)
);

$justifyContents : (
    start: flex-start,
    center: center,
    end: flex-end,
    between: space-between,
    around: space-around,
);

$justify-content: (
    enable: true,
    justifyContents: $justifyContents,
    responsive: true,
    prefix: 'justify',
    variants: ('',)
);

$flexes : (
    initial: 0 1 auto,
    1: 1 1 0%,
    auto: 1 1 auto,
    none: none,
);

$flex: (
    enable: true,
    flexes: $flexes,
    responsive: true,
    prefix: 'flex',
    variants: ('',)
);

$flexGrows : (
    grow: 1,
    grow-0: 0,
);

$flex-grow: (
    enable: true,
    flexGrows: $flexGrows,
    responsive: true,
    prefix: 'flex',
    variants: ('',)
);

$flexShrinks : (
    shrink: 1,
    shrink-0: 0,
);

$flex-shrink: (
    enable: true,
    flexShrinks: $flexShrinks,
    responsive: true,
    prefix: 'flex',
    variants: ('',)
);

$orders : (
    first: -1,
    last: 999,
    none: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9,
    10: 10,
    11: 11,
    12: 12,
);

$order: (
    enable: true,
    orders: $orders,
    responsive: true,
    prefix: 'order',
    variants: ('',)
);

//Spacing
$spacing : (
    auto: auto,
    px: 1px,
    0: 0,
    1: 0.25rem,
    2: 0.5rem,
    3: 0.75rem,
    4: 1rem,
    5: 1.25rem,
    6: 1.5rem,
    8: 2rem,
    10: 2.5rem,
    12: 3rem,
    16: 4rem,
    20: 5rem,
    24: 6rem,
    32: 8rem,
);

$padding: (
    enable: true,
    paddingSizes: $spacing,
    responsive: true,
    prefix: 'p',
    variants: ('',),
    types: (
        '': padding,
        t: padding-top,
        b: padding-bottom,
        r: padding-right,
        l: padding-left,
        x: padding-x,
        y: padding-y,
    )
);

$margin: (
    enable: true,
    marginSizes: $spacing,
    responsive: true,
    prefix: 'm',
    variants: ('',),
    types: (
        '': margin,
        t: margin-top,
        b: margin-bottom,
        l: margin-left,
        r: margin-right,
        x: margin-x,
        y: margin-y,
    )
);

$negative-margin: (
    enable: true,
    negative-marginSizes: $spacing,
    responsive: true,
    prefix: 'm',
    variants: ('',),
    types: (
        '': margin,
        t: margin-top,
        b: margin-bottom,
        l: margin-left,
        r: margin-right,
        x: margin-x,
        y: margin-y,
    )
);

//Sizing
$widthSizes: (
    auto: auto,
    px: 1px,
    0: 0,
    1: 0.25rem,
    2: 0.5rem,
    3: 0.75rem,
    4: 1rem,
    5: 1.25rem,
    6: 1.5rem,
    8: 2rem,
    10: 2.5rem,
    12: 3rem,
    16: 4rem,
    24: 6rem,
    32: 8rem,
    48: 12rem,
    64: 16rem,
    '1\\/2': 50%,
    '1\\/3': 33.33333%,
    '2\\/3': 66.66667%,
    '1\\/4': 25%,
    '3\\/4': 75%,
    '1\\/5': 20%,
    '2\\/5': 40%,
    '3\\/5': 60%,
    '4\\/5': 80%,
    '1\\/6': 16.66667%,
    '5\\/6': 83.33333%,
    full: 100%,
    screen: 100vw,
);

$width: (
    enable: true,
    widthSizes: $widthSizes,
    responsive: true,
    prefix: 'w',
    variants: ('',)
);

$minWidthSizes: (
    0: 0,
    full: 100%,
);

$min-width: (
    enable: true,
    minWidthSizes: $minWidthSizes,
    responsive: true,
    prefix: 'min-w',
    variants: ('',)
);

$maxWidthSizes: (
    xs:	20rem,
    sm:	24rem,
    md:	28rem,
    lg:	32rem,
    xl:	36rem,
    2xl: 42rem,
    3xl: 48rem,
    4xl: 56rem,
    5xl: 64rem,
    6xl: 72rem,
    full: 100%,
);

$max-width: (
    enable: true,
    maxWidthSizes: $maxWidthSizes,
    responsive: true,
    prefix: 'max-w',
    variants: ('',)
);

$heightSizes: (
    auto: auto,
    px: 1px,
    0: 0,
    1: 0.25rem,
    2: 0.5rem,
    3: 0.75rem,
    4: 1rem,
    5: 1.25rem,
    6: 1.5rem,
    8: 2rem,
    10: 2.5rem,
    12: 3rem,
    16: 4rem,
    24: 6rem,
    32: 8rem,
    48: 12rem,
    64: 16rem,
    full: 100%,
    screen: 100vh,
);

$height: (
    enable: true,
    heightSizes: $heightSizes,
    responsive: true,
    prefix: 'h',
    variants: ('',)
);

$minHeightSizes: (
    0: 0,
    full: 100%,
    screen: 100vh,
);

$min-height: (
    enable: true,
    minHeightSizes: $minHeightSizes,
    responsive: true,
    prefix: 'min-h',
    variants: ('',)
);

$maxHeightSizes: (
    full: 100%,
    screen: 100vh,
);

$max-height: (
    enable: true,
    maxHeightSizes: $maxHeightSizes,
    responsive: true,
    prefix: 'max-h',
    variants: ('',)
);

//Tables
$borderCollapses: (
    collapse: collapse,
    separate: separate,
);

$border-collapse: (
    enable: true,
    borderCollapses: $borderCollapses,
    responsive: false,
    prefix: 'border',
    variants: ('',)
);

$tableLayouts: (
    auto: auto,
    fixed: fixed,
);

$table-layout: (
    enable: true,
    tableLayouts: $tableLayouts,
    responsive: true,
    prefix: 'table',
    variants: ('',)
);

//Effects
$shadowEffects: (
    '': (0 2px 1px -1px rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12)),
    sm: (0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12)),
    md: (0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12)),
    lg: (0 5px 6px -3px rgba(0,0,0,.2), 0 9px 12px 1px rgba(0,0,0,.14), 0 3px 16px 2px rgba(0,0,0,.12)),
    xl: (0 8px 10px -5px rgba(0,0,0,.2), 0 16px 24px 2px rgba(0,0,0,.14), 0 6px 30px 5px rgba(0,0,0,.12)),
    2xl: (0 11px 15px -7px rgba(0,0,0,.2), 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12)),
    inner: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06),
    outline: 0 0 0 3px rgba(66, 153, 225, 0.5),
    none: none,
);

$box-shadow: (
    enable: true,
    shadowEffects: $shadowEffects,
    responsive: true,
    prefix: 'shadow',
    variants: ('',hover, focus)
);

$opacityEffects: (
    100: 1,
    75: .75,
    50:	.5,
    25:	.25,
    0: 0,
);

$opacity: (
    enable: true,
    opacityEffects: $opacityEffects,
    responsive: true,
    prefix: 'opacity',
    variants: ('', hover, focus)
);

//Interactivity
$appearances: (
    none: none,
);

$appearance: (
    enable: true,
    appearances: $appearances,
    responsive: true,
    prefix: 'appearance',
    variants: ('',)
);

$cursors: (
    auto: auto,
    default: default,
    pointer: pointer,
    wait: wait,
    text: text,
    move: move,
    not-allowed: not-allowed,
);

$cursor: (
    enable: true,
    cursors: $cursors,
    responsive: true,
    prefix: 'cursor',
    variants: ('',)
);

$outlines: (
    none: 0,
);

$outline: (
    enable: true,
    outlines: $outlines,
    responsive: true,
    prefix: 'outline',
    variants: ('', focus)
);

$pointerEvents: (
    none: none,
    auto: auto,
);

$pointer-events: (
    enable: true,
    pointerEvents: $pointerEvents,
    responsive: true,
    prefix: 'pointer-events',
    variants: ('',)
);

$resizes: (
    none: none,
    '': both,
    y: vertical,
    x: horizontal,
);

$resize: (
    enable: true,
    resizes: $resizes,
    responsive: true,
    prefix: 'resize',
    variants: ('',)
);

$userSelects: (
    none: none,
    text: text,
    all: all,
    auto: auto,
);

$user-select: (
    enable: true,
    userSelects: $userSelects,
    responsive: true,
    prefix: 'select',
    variants: ('',)
);

//SVG
$fills: (
    current: currentColor,
);

$fill: (
    enable: true,
    fills: $fills,
    responsive: false,
    prefix: 'fill',
    variants: ('',)
);

$strokes: (
    current: currentColor,
);

$stroke: (
    enable: true,
    strokes: $strokes,
    responsive: false,
    prefix: 'stroke',
    variants: ('',)
);



//btn
